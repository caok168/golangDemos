// Code generated by protoc-gen-go. DO NOT EDIT.
// source: FaceRecognition.proto

package ivs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FaceExtractRequest struct {
	TaskId               uint32   `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	DeviceDesc           uint32   `protobuf:"varint,2,opt,name=deviceDesc,proto3" json:"deviceDesc,omitempty"`
	SourceImagePath      string   `protobuf:"bytes,3,opt,name=sourceImagePath,proto3" json:"sourceImagePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaceExtractRequest) Reset()         { *m = FaceExtractRequest{} }
func (m *FaceExtractRequest) String() string { return proto.CompactTextString(m) }
func (*FaceExtractRequest) ProtoMessage()    {}
func (*FaceExtractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{0}
}
func (m *FaceExtractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceExtractRequest.Unmarshal(m, b)
}
func (m *FaceExtractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceExtractRequest.Marshal(b, m, deterministic)
}
func (dst *FaceExtractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceExtractRequest.Merge(dst, src)
}
func (m *FaceExtractRequest) XXX_Size() int {
	return xxx_messageInfo_FaceExtractRequest.Size(m)
}
func (m *FaceExtractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceExtractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FaceExtractRequest proto.InternalMessageInfo

func (m *FaceExtractRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *FaceExtractRequest) GetDeviceDesc() uint32 {
	if m != nil {
		return m.DeviceDesc
	}
	return 0
}

func (m *FaceExtractRequest) GetSourceImagePath() string {
	if m != nil {
		return m.SourceImagePath
	}
	return ""
}

type FaceExtractReply struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// Types that are valid to be assigned to StatusOrResult:
	//	*FaceExtractReply_Result
	//	*FaceExtractReply_Status
	StatusOrResult       isFaceExtractReply_StatusOrResult `protobuf_oneof:"statusOrResult"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *FaceExtractReply) Reset()         { *m = FaceExtractReply{} }
func (m *FaceExtractReply) String() string { return proto.CompactTextString(m) }
func (*FaceExtractReply) ProtoMessage()    {}
func (*FaceExtractReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{1}
}
func (m *FaceExtractReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceExtractReply.Unmarshal(m, b)
}
func (m *FaceExtractReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceExtractReply.Marshal(b, m, deterministic)
}
func (dst *FaceExtractReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceExtractReply.Merge(dst, src)
}
func (m *FaceExtractReply) XXX_Size() int {
	return xxx_messageInfo_FaceExtractReply.Size(m)
}
func (m *FaceExtractReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceExtractReply.DiscardUnknown(m)
}

var xxx_messageInfo_FaceExtractReply proto.InternalMessageInfo

func (m *FaceExtractReply) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type isFaceExtractReply_StatusOrResult interface {
	isFaceExtractReply_StatusOrResult()
}

type FaceExtractReply_Result struct {
	Result *FaceExtractResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

type FaceExtractReply_Status struct {
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

func (*FaceExtractReply_Result) isFaceExtractReply_StatusOrResult() {}

func (*FaceExtractReply_Status) isFaceExtractReply_StatusOrResult() {}

func (m *FaceExtractReply) GetStatusOrResult() isFaceExtractReply_StatusOrResult {
	if m != nil {
		return m.StatusOrResult
	}
	return nil
}

func (m *FaceExtractReply) GetResult() *FaceExtractResult {
	if x, ok := m.GetStatusOrResult().(*FaceExtractReply_Result); ok {
		return x.Result
	}
	return nil
}

func (m *FaceExtractReply) GetStatus() *Status {
	if x, ok := m.GetStatusOrResult().(*FaceExtractReply_Status); ok {
		return x.Status
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FaceExtractReply) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FaceExtractReply_OneofMarshaler, _FaceExtractReply_OneofUnmarshaler, _FaceExtractReply_OneofSizer, []interface{}{
		(*FaceExtractReply_Result)(nil),
		(*FaceExtractReply_Status)(nil),
	}
}

func _FaceExtractReply_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FaceExtractReply)
	// statusOrResult
	switch x := m.StatusOrResult.(type) {
	case *FaceExtractReply_Result:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case *FaceExtractReply_Status:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FaceExtractReply.StatusOrResult has unexpected type %T", x)
	}
	return nil
}

func _FaceExtractReply_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FaceExtractReply)
	switch tag {
	case 2: // statusOrResult.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FaceExtractResult)
		err := b.DecodeMessage(msg)
		m.StatusOrResult = &FaceExtractReply_Result{msg}
		return true, err
	case 3: // statusOrResult.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Status)
		err := b.DecodeMessage(msg)
		m.StatusOrResult = &FaceExtractReply_Status{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FaceExtractReply_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FaceExtractReply)
	// statusOrResult
	switch x := m.StatusOrResult.(type) {
	case *FaceExtractReply_Result:
		s := proto.Size(x.Result)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FaceExtractReply_Status:
		s := proto.Size(x.Status)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FaceExtractResult struct {
	Uuid                 string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Image                []byte            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	ImageType            string            `protobuf:"bytes,3,opt,name=imageType,proto3" json:"imageType,omitempty"`
	Eigen                []byte            `protobuf:"bytes,4,opt,name=eigen,proto3" json:"eigen,omitempty"`
	Attrs                map[string]string `protobuf:"bytes,5,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FaceExtractResult) Reset()         { *m = FaceExtractResult{} }
func (m *FaceExtractResult) String() string { return proto.CompactTextString(m) }
func (*FaceExtractResult) ProtoMessage()    {}
func (*FaceExtractResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{2}
}
func (m *FaceExtractResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceExtractResult.Unmarshal(m, b)
}
func (m *FaceExtractResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceExtractResult.Marshal(b, m, deterministic)
}
func (dst *FaceExtractResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceExtractResult.Merge(dst, src)
}
func (m *FaceExtractResult) XXX_Size() int {
	return xxx_messageInfo_FaceExtractResult.Size(m)
}
func (m *FaceExtractResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceExtractResult.DiscardUnknown(m)
}

var xxx_messageInfo_FaceExtractResult proto.InternalMessageInfo

func (m *FaceExtractResult) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *FaceExtractResult) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *FaceExtractResult) GetImageType() string {
	if m != nil {
		return m.ImageType
	}
	return ""
}

func (m *FaceExtractResult) GetEigen() []byte {
	if m != nil {
		return m.Eigen
	}
	return nil
}

func (m *FaceExtractResult) GetAttrs() map[string]string {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type FaceCompareRequest struct {
	TaskId               uint32     `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	DeviceDesc           uint32     `protobuf:"varint,2,opt,name=deviceDesc,proto3" json:"deviceDesc,omitempty"`
	SourceFacesPath      *CacheInfo `protobuf:"bytes,3,opt,name=sourceFacesPath,proto3" json:"sourceFacesPath,omitempty"`
	TargetFacesPath      *CacheInfo `protobuf:"bytes,4,opt,name=targetFacesPath,proto3" json:"targetFacesPath,omitempty"`
	TopN                 uint32     `protobuf:"varint,7,opt,name=topN,proto3" json:"topN,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FaceCompareRequest) Reset()         { *m = FaceCompareRequest{} }
func (m *FaceCompareRequest) String() string { return proto.CompactTextString(m) }
func (*FaceCompareRequest) ProtoMessage()    {}
func (*FaceCompareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{3}
}
func (m *FaceCompareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceCompareRequest.Unmarshal(m, b)
}
func (m *FaceCompareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceCompareRequest.Marshal(b, m, deterministic)
}
func (dst *FaceCompareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceCompareRequest.Merge(dst, src)
}
func (m *FaceCompareRequest) XXX_Size() int {
	return xxx_messageInfo_FaceCompareRequest.Size(m)
}
func (m *FaceCompareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceCompareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FaceCompareRequest proto.InternalMessageInfo

func (m *FaceCompareRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *FaceCompareRequest) GetDeviceDesc() uint32 {
	if m != nil {
		return m.DeviceDesc
	}
	return 0
}

func (m *FaceCompareRequest) GetSourceFacesPath() *CacheInfo {
	if m != nil {
		return m.SourceFacesPath
	}
	return nil
}

func (m *FaceCompareRequest) GetTargetFacesPath() *CacheInfo {
	if m != nil {
		return m.TargetFacesPath
	}
	return nil
}

func (m *FaceCompareRequest) GetTopN() uint32 {
	if m != nil {
		return m.TopN
	}
	return 0
}

type FaceCompareReply struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// Types that are valid to be assigned to StatusOrResult:
	//	*FaceCompareReply_Result
	//	*FaceCompareReply_Status
	StatusOrResult       isFaceCompareReply_StatusOrResult `protobuf_oneof:"statusOrResult"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *FaceCompareReply) Reset()         { *m = FaceCompareReply{} }
func (m *FaceCompareReply) String() string { return proto.CompactTextString(m) }
func (*FaceCompareReply) ProtoMessage()    {}
func (*FaceCompareReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{4}
}
func (m *FaceCompareReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceCompareReply.Unmarshal(m, b)
}
func (m *FaceCompareReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceCompareReply.Marshal(b, m, deterministic)
}
func (dst *FaceCompareReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceCompareReply.Merge(dst, src)
}
func (m *FaceCompareReply) XXX_Size() int {
	return xxx_messageInfo_FaceCompareReply.Size(m)
}
func (m *FaceCompareReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceCompareReply.DiscardUnknown(m)
}

var xxx_messageInfo_FaceCompareReply proto.InternalMessageInfo

func (m *FaceCompareReply) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type isFaceCompareReply_StatusOrResult interface {
	isFaceCompareReply_StatusOrResult()
}

type FaceCompareReply_Result struct {
	Result *FaceCompareResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

type FaceCompareReply_Status struct {
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

func (*FaceCompareReply_Result) isFaceCompareReply_StatusOrResult() {}

func (*FaceCompareReply_Status) isFaceCompareReply_StatusOrResult() {}

func (m *FaceCompareReply) GetStatusOrResult() isFaceCompareReply_StatusOrResult {
	if m != nil {
		return m.StatusOrResult
	}
	return nil
}

func (m *FaceCompareReply) GetResult() *FaceCompareResult {
	if x, ok := m.GetStatusOrResult().(*FaceCompareReply_Result); ok {
		return x.Result
	}
	return nil
}

func (m *FaceCompareReply) GetStatus() *Status {
	if x, ok := m.GetStatusOrResult().(*FaceCompareReply_Status); ok {
		return x.Status
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FaceCompareReply) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FaceCompareReply_OneofMarshaler, _FaceCompareReply_OneofUnmarshaler, _FaceCompareReply_OneofSizer, []interface{}{
		(*FaceCompareReply_Result)(nil),
		(*FaceCompareReply_Status)(nil),
	}
}

func _FaceCompareReply_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FaceCompareReply)
	// statusOrResult
	switch x := m.StatusOrResult.(type) {
	case *FaceCompareReply_Result:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case *FaceCompareReply_Status:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FaceCompareReply.StatusOrResult has unexpected type %T", x)
	}
	return nil
}

func _FaceCompareReply_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FaceCompareReply)
	switch tag {
	case 2: // statusOrResult.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FaceCompareResult)
		err := b.DecodeMessage(msg)
		m.StatusOrResult = &FaceCompareReply_Result{msg}
		return true, err
	case 3: // statusOrResult.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Status)
		err := b.DecodeMessage(msg)
		m.StatusOrResult = &FaceCompareReply_Status{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FaceCompareReply_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FaceCompareReply)
	// statusOrResult
	switch x := m.StatusOrResult.(type) {
	case *FaceCompareReply_Result:
		s := proto.Size(x.Result)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FaceCompareReply_Status:
		s := proto.Size(x.Status)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FaceCompareResult struct {
	RepoId               string            `protobuf:"bytes,1,opt,name=repoId,proto3" json:"repoId,omitempty"`
	FaceUuid             string            `protobuf:"bytes,2,opt,name=faceUuid,proto3" json:"faceUuid,omitempty"`
	Attrs                map[string]string `protobuf:"bytes,5,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Matches              []*Matched        `protobuf:"bytes,4,rep,name=matches,proto3" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FaceCompareResult) Reset()         { *m = FaceCompareResult{} }
func (m *FaceCompareResult) String() string { return proto.CompactTextString(m) }
func (*FaceCompareResult) ProtoMessage()    {}
func (*FaceCompareResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{5}
}
func (m *FaceCompareResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceCompareResult.Unmarshal(m, b)
}
func (m *FaceCompareResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceCompareResult.Marshal(b, m, deterministic)
}
func (dst *FaceCompareResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceCompareResult.Merge(dst, src)
}
func (m *FaceCompareResult) XXX_Size() int {
	return xxx_messageInfo_FaceCompareResult.Size(m)
}
func (m *FaceCompareResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceCompareResult.DiscardUnknown(m)
}

var xxx_messageInfo_FaceCompareResult proto.InternalMessageInfo

func (m *FaceCompareResult) GetRepoId() string {
	if m != nil {
		return m.RepoId
	}
	return ""
}

func (m *FaceCompareResult) GetFaceUuid() string {
	if m != nil {
		return m.FaceUuid
	}
	return ""
}

func (m *FaceCompareResult) GetAttrs() map[string]string {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *FaceCompareResult) GetMatches() []*Matched {
	if m != nil {
		return m.Matches
	}
	return nil
}

type VideoRecognizeRequest struct {
	TaskId               uint32        `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	DeviceDesc           uint32        `protobuf:"varint,2,opt,name=deviceDesc,proto3" json:"deviceDesc,omitempty"`
	TargetRepos          []*CacheInfo  `protobuf:"bytes,3,rep,name=targetRepos,proto3" json:"targetRepos,omitempty"`
	SourceCamera         *SourceCamera `protobuf:"bytes,4,opt,name=sourceCamera,proto3" json:"sourceCamera,omitempty"`
	SaveCapturedFace     bool          `protobuf:"varint,5,opt,name=saveCapturedFace,proto3" json:"saveCapturedFace,omitempty"`
	CapturedPath         string        `protobuf:"bytes,6,opt,name=capturedPath,proto3" json:"capturedPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VideoRecognizeRequest) Reset()         { *m = VideoRecognizeRequest{} }
func (m *VideoRecognizeRequest) String() string { return proto.CompactTextString(m) }
func (*VideoRecognizeRequest) ProtoMessage()    {}
func (*VideoRecognizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{6}
}
func (m *VideoRecognizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRecognizeRequest.Unmarshal(m, b)
}
func (m *VideoRecognizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRecognizeRequest.Marshal(b, m, deterministic)
}
func (dst *VideoRecognizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRecognizeRequest.Merge(dst, src)
}
func (m *VideoRecognizeRequest) XXX_Size() int {
	return xxx_messageInfo_VideoRecognizeRequest.Size(m)
}
func (m *VideoRecognizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRecognizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRecognizeRequest proto.InternalMessageInfo

func (m *VideoRecognizeRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *VideoRecognizeRequest) GetDeviceDesc() uint32 {
	if m != nil {
		return m.DeviceDesc
	}
	return 0
}

func (m *VideoRecognizeRequest) GetTargetRepos() []*CacheInfo {
	if m != nil {
		return m.TargetRepos
	}
	return nil
}

func (m *VideoRecognizeRequest) GetSourceCamera() *SourceCamera {
	if m != nil {
		return m.SourceCamera
	}
	return nil
}

func (m *VideoRecognizeRequest) GetSaveCapturedFace() bool {
	if m != nil {
		return m.SaveCapturedFace
	}
	return false
}

func (m *VideoRecognizeRequest) GetCapturedPath() string {
	if m != nil {
		return m.CapturedPath
	}
	return ""
}

type SourceCamera struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceCamera) Reset()         { *m = SourceCamera{} }
func (m *SourceCamera) String() string { return proto.CompactTextString(m) }
func (*SourceCamera) ProtoMessage()    {}
func (*SourceCamera) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{7}
}
func (m *SourceCamera) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceCamera.Unmarshal(m, b)
}
func (m *SourceCamera) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceCamera.Marshal(b, m, deterministic)
}
func (dst *SourceCamera) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceCamera.Merge(dst, src)
}
func (m *SourceCamera) XXX_Size() int {
	return xxx_messageInfo_SourceCamera.Size(m)
}
func (m *SourceCamera) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceCamera.DiscardUnknown(m)
}

var xxx_messageInfo_SourceCamera proto.InternalMessageInfo

func (m *SourceCamera) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SourceCamera) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type VideoRecognizeReply struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// Types that are valid to be assigned to StatusOrResultOrBoxes:
	//	*VideoRecognizeReply_Result
	//	*VideoRecognizeReply_Status
	//	*VideoRecognizeReply_BoxInfos
	StatusOrResultOrBoxes isVideoRecognizeReply_StatusOrResultOrBoxes `protobuf_oneof:"statusOrResultOrBoxes"`
	XXX_NoUnkeyedLiteral  struct{}                                    `json:"-"`
	XXX_unrecognized      []byte                                      `json:"-"`
	XXX_sizecache         int32                                       `json:"-"`
}

func (m *VideoRecognizeReply) Reset()         { *m = VideoRecognizeReply{} }
func (m *VideoRecognizeReply) String() string { return proto.CompactTextString(m) }
func (*VideoRecognizeReply) ProtoMessage()    {}
func (*VideoRecognizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{8}
}
func (m *VideoRecognizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRecognizeReply.Unmarshal(m, b)
}
func (m *VideoRecognizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRecognizeReply.Marshal(b, m, deterministic)
}
func (dst *VideoRecognizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRecognizeReply.Merge(dst, src)
}
func (m *VideoRecognizeReply) XXX_Size() int {
	return xxx_messageInfo_VideoRecognizeReply.Size(m)
}
func (m *VideoRecognizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRecognizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRecognizeReply proto.InternalMessageInfo

func (m *VideoRecognizeReply) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type isVideoRecognizeReply_StatusOrResultOrBoxes interface {
	isVideoRecognizeReply_StatusOrResultOrBoxes()
}

type VideoRecognizeReply_Result struct {
	Result *VideoRecognizeResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

type VideoRecognizeReply_Status struct {
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3,oneof"`
}

type VideoRecognizeReply_BoxInfos struct {
	BoxInfos *BoxInfos `protobuf:"bytes,4,opt,name=boxInfos,proto3,oneof"`
}

func (*VideoRecognizeReply_Result) isVideoRecognizeReply_StatusOrResultOrBoxes() {}

func (*VideoRecognizeReply_Status) isVideoRecognizeReply_StatusOrResultOrBoxes() {}

func (*VideoRecognizeReply_BoxInfos) isVideoRecognizeReply_StatusOrResultOrBoxes() {}

func (m *VideoRecognizeReply) GetStatusOrResultOrBoxes() isVideoRecognizeReply_StatusOrResultOrBoxes {
	if m != nil {
		return m.StatusOrResultOrBoxes
	}
	return nil
}

func (m *VideoRecognizeReply) GetResult() *VideoRecognizeResult {
	if x, ok := m.GetStatusOrResultOrBoxes().(*VideoRecognizeReply_Result); ok {
		return x.Result
	}
	return nil
}

func (m *VideoRecognizeReply) GetStatus() *Status {
	if x, ok := m.GetStatusOrResultOrBoxes().(*VideoRecognizeReply_Status); ok {
		return x.Status
	}
	return nil
}

func (m *VideoRecognizeReply) GetBoxInfos() *BoxInfos {
	if x, ok := m.GetStatusOrResultOrBoxes().(*VideoRecognizeReply_BoxInfos); ok {
		return x.BoxInfos
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VideoRecognizeReply) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VideoRecognizeReply_OneofMarshaler, _VideoRecognizeReply_OneofUnmarshaler, _VideoRecognizeReply_OneofSizer, []interface{}{
		(*VideoRecognizeReply_Result)(nil),
		(*VideoRecognizeReply_Status)(nil),
		(*VideoRecognizeReply_BoxInfos)(nil),
	}
}

func _VideoRecognizeReply_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VideoRecognizeReply)
	// statusOrResultOrBoxes
	switch x := m.StatusOrResultOrBoxes.(type) {
	case *VideoRecognizeReply_Result:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case *VideoRecognizeReply_Status:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case *VideoRecognizeReply_BoxInfos:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BoxInfos); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VideoRecognizeReply.StatusOrResultOrBoxes has unexpected type %T", x)
	}
	return nil
}

func _VideoRecognizeReply_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VideoRecognizeReply)
	switch tag {
	case 2: // statusOrResultOrBoxes.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VideoRecognizeResult)
		err := b.DecodeMessage(msg)
		m.StatusOrResultOrBoxes = &VideoRecognizeReply_Result{msg}
		return true, err
	case 3: // statusOrResultOrBoxes.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Status)
		err := b.DecodeMessage(msg)
		m.StatusOrResultOrBoxes = &VideoRecognizeReply_Status{msg}
		return true, err
	case 4: // statusOrResultOrBoxes.boxInfos
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BoxInfos)
		err := b.DecodeMessage(msg)
		m.StatusOrResultOrBoxes = &VideoRecognizeReply_BoxInfos{msg}
		return true, err
	default:
		return false, nil
	}
}

func _VideoRecognizeReply_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VideoRecognizeReply)
	// statusOrResultOrBoxes
	switch x := m.StatusOrResultOrBoxes.(type) {
	case *VideoRecognizeReply_Result:
		s := proto.Size(x.Result)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VideoRecognizeReply_Status:
		s := proto.Size(x.Status)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VideoRecognizeReply_BoxInfos:
		s := proto.Size(x.BoxInfos)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type VideoRecognizeResult struct {
	FaceUuid  string            `protobuf:"bytes,1,opt,name=faceUuid,proto3" json:"faceUuid,omitempty"`
	Path      string            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	ImageType string            `protobuf:"bytes,3,opt,name=imageType,proto3" json:"imageType,omitempty"`
	Attrs     map[string]string `protobuf:"bytes,5,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to TimestampOrCaptureTime:
	//	*VideoRecognizeResult_Timestamp
	//	*VideoRecognizeResult_CaptureTime
	TimestampOrCaptureTime isVideoRecognizeResult_TimestampOrCaptureTime `protobuf_oneof:"timestampOrCaptureTime"`
	Matches                []*Matched                                    `protobuf:"bytes,4,rep,name=matches,proto3" json:"matches,omitempty"`
	Image                  []byte                                        `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Eigen                  []byte                                        `protobuf:"bytes,9,opt,name=eigen,proto3" json:"eigen,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                      `json:"-"`
	XXX_unrecognized       []byte                                        `json:"-"`
	XXX_sizecache          int32                                         `json:"-"`
}

func (m *VideoRecognizeResult) Reset()         { *m = VideoRecognizeResult{} }
func (m *VideoRecognizeResult) String() string { return proto.CompactTextString(m) }
func (*VideoRecognizeResult) ProtoMessage()    {}
func (*VideoRecognizeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{9}
}
func (m *VideoRecognizeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRecognizeResult.Unmarshal(m, b)
}
func (m *VideoRecognizeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRecognizeResult.Marshal(b, m, deterministic)
}
func (dst *VideoRecognizeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRecognizeResult.Merge(dst, src)
}
func (m *VideoRecognizeResult) XXX_Size() int {
	return xxx_messageInfo_VideoRecognizeResult.Size(m)
}
func (m *VideoRecognizeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRecognizeResult.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRecognizeResult proto.InternalMessageInfo

func (m *VideoRecognizeResult) GetFaceUuid() string {
	if m != nil {
		return m.FaceUuid
	}
	return ""
}

func (m *VideoRecognizeResult) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VideoRecognizeResult) GetImageType() string {
	if m != nil {
		return m.ImageType
	}
	return ""
}

func (m *VideoRecognizeResult) GetAttrs() map[string]string {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type isVideoRecognizeResult_TimestampOrCaptureTime interface {
	isVideoRecognizeResult_TimestampOrCaptureTime()
}

type VideoRecognizeResult_Timestamp struct {
	Timestamp float32 `protobuf:"fixed32,6,opt,name=timestamp,proto3,oneof"`
}

type VideoRecognizeResult_CaptureTime struct {
	CaptureTime string `protobuf:"bytes,7,opt,name=captureTime,proto3,oneof"`
}

func (*VideoRecognizeResult_Timestamp) isVideoRecognizeResult_TimestampOrCaptureTime() {}

func (*VideoRecognizeResult_CaptureTime) isVideoRecognizeResult_TimestampOrCaptureTime() {}

func (m *VideoRecognizeResult) GetTimestampOrCaptureTime() isVideoRecognizeResult_TimestampOrCaptureTime {
	if m != nil {
		return m.TimestampOrCaptureTime
	}
	return nil
}

func (m *VideoRecognizeResult) GetTimestamp() float32 {
	if x, ok := m.GetTimestampOrCaptureTime().(*VideoRecognizeResult_Timestamp); ok {
		return x.Timestamp
	}
	return 0
}

func (m *VideoRecognizeResult) GetCaptureTime() string {
	if x, ok := m.GetTimestampOrCaptureTime().(*VideoRecognizeResult_CaptureTime); ok {
		return x.CaptureTime
	}
	return ""
}

func (m *VideoRecognizeResult) GetMatches() []*Matched {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *VideoRecognizeResult) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *VideoRecognizeResult) GetEigen() []byte {
	if m != nil {
		return m.Eigen
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VideoRecognizeResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VideoRecognizeResult_OneofMarshaler, _VideoRecognizeResult_OneofUnmarshaler, _VideoRecognizeResult_OneofSizer, []interface{}{
		(*VideoRecognizeResult_Timestamp)(nil),
		(*VideoRecognizeResult_CaptureTime)(nil),
	}
}

func _VideoRecognizeResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VideoRecognizeResult)
	// timestampOrCaptureTime
	switch x := m.TimestampOrCaptureTime.(type) {
	case *VideoRecognizeResult_Timestamp:
		b.EncodeVarint(6<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.Timestamp)))
	case *VideoRecognizeResult_CaptureTime:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.CaptureTime)
	case nil:
	default:
		return fmt.Errorf("VideoRecognizeResult.TimestampOrCaptureTime has unexpected type %T", x)
	}
	return nil
}

func _VideoRecognizeResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VideoRecognizeResult)
	switch tag {
	case 6: // timestampOrCaptureTime.timestamp
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.TimestampOrCaptureTime = &VideoRecognizeResult_Timestamp{math.Float32frombits(uint32(x))}
		return true, err
	case 7: // timestampOrCaptureTime.captureTime
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TimestampOrCaptureTime = &VideoRecognizeResult_CaptureTime{x}
		return true, err
	default:
		return false, nil
	}
}

func _VideoRecognizeResult_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VideoRecognizeResult)
	// timestampOrCaptureTime
	switch x := m.TimestampOrCaptureTime.(type) {
	case *VideoRecognizeResult_Timestamp:
		n += 1 // tag and wire
		n += 4
	case *VideoRecognizeResult_CaptureTime:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.CaptureTime)))
		n += len(x.CaptureTime)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BoxInfos struct {
	BoxInfos             []*BoxInfos_BoxInfo `protobuf:"bytes,1,rep,name=boxInfos,proto3" json:"boxInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BoxInfos) Reset()         { *m = BoxInfos{} }
func (m *BoxInfos) String() string { return proto.CompactTextString(m) }
func (*BoxInfos) ProtoMessage()    {}
func (*BoxInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{10}
}
func (m *BoxInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoxInfos.Unmarshal(m, b)
}
func (m *BoxInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoxInfos.Marshal(b, m, deterministic)
}
func (dst *BoxInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoxInfos.Merge(dst, src)
}
func (m *BoxInfos) XXX_Size() int {
	return xxx_messageInfo_BoxInfos.Size(m)
}
func (m *BoxInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_BoxInfos.DiscardUnknown(m)
}

var xxx_messageInfo_BoxInfos proto.InternalMessageInfo

func (m *BoxInfos) GetBoxInfos() []*BoxInfos_BoxInfo {
	if m != nil {
		return m.BoxInfos
	}
	return nil
}

type BoxInfos_BoxInfo struct {
	X0                   uint32   `protobuf:"varint,1,opt,name=x0,proto3" json:"x0,omitempty"`
	Y0                   uint32   `protobuf:"varint,2,opt,name=y0,proto3" json:"y0,omitempty"`
	X1                   uint32   `protobuf:"varint,3,opt,name=x1,proto3" json:"x1,omitempty"`
	Y1                   uint32   `protobuf:"varint,4,opt,name=y1,proto3" json:"y1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoxInfos_BoxInfo) Reset()         { *m = BoxInfos_BoxInfo{} }
func (m *BoxInfos_BoxInfo) String() string { return proto.CompactTextString(m) }
func (*BoxInfos_BoxInfo) ProtoMessage()    {}
func (*BoxInfos_BoxInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{10, 0}
}
func (m *BoxInfos_BoxInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoxInfos_BoxInfo.Unmarshal(m, b)
}
func (m *BoxInfos_BoxInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoxInfos_BoxInfo.Marshal(b, m, deterministic)
}
func (dst *BoxInfos_BoxInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoxInfos_BoxInfo.Merge(dst, src)
}
func (m *BoxInfos_BoxInfo) XXX_Size() int {
	return xxx_messageInfo_BoxInfos_BoxInfo.Size(m)
}
func (m *BoxInfos_BoxInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BoxInfos_BoxInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BoxInfos_BoxInfo proto.InternalMessageInfo

func (m *BoxInfos_BoxInfo) GetX0() uint32 {
	if m != nil {
		return m.X0
	}
	return 0
}

func (m *BoxInfos_BoxInfo) GetY0() uint32 {
	if m != nil {
		return m.Y0
	}
	return 0
}

func (m *BoxInfos_BoxInfo) GetX1() uint32 {
	if m != nil {
		return m.X1
	}
	return 0
}

func (m *BoxInfos_BoxInfo) GetY1() uint32 {
	if m != nil {
		return m.Y1
	}
	return 0
}

type Status struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{11}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Status) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type Matched struct {
	RepoId               string   `protobuf:"bytes,1,opt,name=repoId,proto3" json:"repoId,omitempty"`
	FaceUuid             string   `protobuf:"bytes,2,opt,name=faceUuid,proto3" json:"faceUuid,omitempty"`
	Score                float32  `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Matched) Reset()         { *m = Matched{} }
func (m *Matched) String() string { return proto.CompactTextString(m) }
func (*Matched) ProtoMessage()    {}
func (*Matched) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{12}
}
func (m *Matched) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Matched.Unmarshal(m, b)
}
func (m *Matched) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Matched.Marshal(b, m, deterministic)
}
func (dst *Matched) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Matched.Merge(dst, src)
}
func (m *Matched) XXX_Size() int {
	return xxx_messageInfo_Matched.Size(m)
}
func (m *Matched) XXX_DiscardUnknown() {
	xxx_messageInfo_Matched.DiscardUnknown(m)
}

var xxx_messageInfo_Matched proto.InternalMessageInfo

func (m *Matched) GetRepoId() string {
	if m != nil {
		return m.RepoId
	}
	return ""
}

func (m *Matched) GetFaceUuid() string {
	if m != nil {
		return m.FaceUuid
	}
	return ""
}

func (m *Matched) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type CacheInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CacheEigensPath      string   `protobuf:"bytes,2,opt,name=cacheEigensPath,proto3" json:"cacheEigensPath,omitempty"`
	CacheUuidsPath       string   `protobuf:"bytes,3,opt,name=cacheUuidsPath,proto3" json:"cacheUuidsPath,omitempty"`
	Threshold            float32  `protobuf:"fixed32,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheInfo) Reset()         { *m = CacheInfo{} }
func (m *CacheInfo) String() string { return proto.CompactTextString(m) }
func (*CacheInfo) ProtoMessage()    {}
func (*CacheInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb, []int{13}
}
func (m *CacheInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheInfo.Unmarshal(m, b)
}
func (m *CacheInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheInfo.Marshal(b, m, deterministic)
}
func (dst *CacheInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheInfo.Merge(dst, src)
}
func (m *CacheInfo) XXX_Size() int {
	return xxx_messageInfo_CacheInfo.Size(m)
}
func (m *CacheInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CacheInfo proto.InternalMessageInfo

func (m *CacheInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CacheInfo) GetCacheEigensPath() string {
	if m != nil {
		return m.CacheEigensPath
	}
	return ""
}

func (m *CacheInfo) GetCacheUuidsPath() string {
	if m != nil {
		return m.CacheUuidsPath
	}
	return ""
}

func (m *CacheInfo) GetThreshold() float32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func init() {
	proto.RegisterType((*FaceExtractRequest)(nil), "ivs.FaceExtractRequest")
	proto.RegisterType((*FaceExtractReply)(nil), "ivs.FaceExtractReply")
	proto.RegisterType((*FaceExtractResult)(nil), "ivs.FaceExtractResult")
	proto.RegisterMapType((map[string]string)(nil), "ivs.FaceExtractResult.AttrsEntry")
	proto.RegisterType((*FaceCompareRequest)(nil), "ivs.FaceCompareRequest")
	proto.RegisterType((*FaceCompareReply)(nil), "ivs.FaceCompareReply")
	proto.RegisterType((*FaceCompareResult)(nil), "ivs.FaceCompareResult")
	proto.RegisterMapType((map[string]string)(nil), "ivs.FaceCompareResult.AttrsEntry")
	proto.RegisterType((*VideoRecognizeRequest)(nil), "ivs.VideoRecognizeRequest")
	proto.RegisterType((*SourceCamera)(nil), "ivs.SourceCamera")
	proto.RegisterType((*VideoRecognizeReply)(nil), "ivs.VideoRecognizeReply")
	proto.RegisterType((*VideoRecognizeResult)(nil), "ivs.VideoRecognizeResult")
	proto.RegisterMapType((map[string]string)(nil), "ivs.VideoRecognizeResult.AttrsEntry")
	proto.RegisterType((*BoxInfos)(nil), "ivs.BoxInfos")
	proto.RegisterType((*BoxInfos_BoxInfo)(nil), "ivs.BoxInfos.BoxInfo")
	proto.RegisterType((*Status)(nil), "ivs.Status")
	proto.RegisterType((*Matched)(nil), "ivs.Matched")
	proto.RegisterType((*CacheInfo)(nil), "ivs.cacheInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FaceRecognitionClient is the client API for FaceRecognition service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaceRecognitionClient interface {
	FaceExtract(ctx context.Context, in *FaceExtractRequest, opts ...grpc.CallOption) (*FaceExtractReply, error)
	FaceCompare(ctx context.Context, in *FaceCompareRequest, opts ...grpc.CallOption) (FaceRecognition_FaceCompareClient, error)
	VideoRecognize(ctx context.Context, in *VideoRecognizeRequest, opts ...grpc.CallOption) (FaceRecognition_VideoRecognizeClient, error)
}

type faceRecognitionClient struct {
	cc *grpc.ClientConn
}

func NewFaceRecognitionClient(cc *grpc.ClientConn) FaceRecognitionClient {
	return &faceRecognitionClient{cc}
}

func (c *faceRecognitionClient) FaceExtract(ctx context.Context, in *FaceExtractRequest, opts ...grpc.CallOption) (*FaceExtractReply, error) {
	out := new(FaceExtractReply)
	err := c.cc.Invoke(ctx, "/ivs.FaceRecognition/FaceExtract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faceRecognitionClient) FaceCompare(ctx context.Context, in *FaceCompareRequest, opts ...grpc.CallOption) (FaceRecognition_FaceCompareClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FaceRecognition_serviceDesc.Streams[0], "/ivs.FaceRecognition/FaceCompare", opts...)
	if err != nil {
		return nil, err
	}
	x := &faceRecognitionFaceCompareClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FaceRecognition_FaceCompareClient interface {
	Recv() (*FaceCompareReply, error)
	grpc.ClientStream
}

type faceRecognitionFaceCompareClient struct {
	grpc.ClientStream
}

func (x *faceRecognitionFaceCompareClient) Recv() (*FaceCompareReply, error) {
	m := new(FaceCompareReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *faceRecognitionClient) VideoRecognize(ctx context.Context, in *VideoRecognizeRequest, opts ...grpc.CallOption) (FaceRecognition_VideoRecognizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FaceRecognition_serviceDesc.Streams[1], "/ivs.FaceRecognition/VideoRecognize", opts...)
	if err != nil {
		return nil, err
	}
	x := &faceRecognitionVideoRecognizeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FaceRecognition_VideoRecognizeClient interface {
	Recv() (*VideoRecognizeReply, error)
	grpc.ClientStream
}

type faceRecognitionVideoRecognizeClient struct {
	grpc.ClientStream
}

func (x *faceRecognitionVideoRecognizeClient) Recv() (*VideoRecognizeReply, error) {
	m := new(VideoRecognizeReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FaceRecognitionServer is the server API for FaceRecognition service.
type FaceRecognitionServer interface {
	FaceExtract(context.Context, *FaceExtractRequest) (*FaceExtractReply, error)
	FaceCompare(*FaceCompareRequest, FaceRecognition_FaceCompareServer) error
	VideoRecognize(*VideoRecognizeRequest, FaceRecognition_VideoRecognizeServer) error
}

func RegisterFaceRecognitionServer(s *grpc.Server, srv FaceRecognitionServer) {
	s.RegisterService(&_FaceRecognition_serviceDesc, srv)
}

func _FaceRecognition_FaceExtract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FaceExtractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceRecognitionServer).FaceExtract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ivs.FaceRecognition/FaceExtract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceRecognitionServer).FaceExtract(ctx, req.(*FaceExtractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaceRecognition_FaceCompare_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FaceCompareRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FaceRecognitionServer).FaceCompare(m, &faceRecognitionFaceCompareServer{stream})
}

type FaceRecognition_FaceCompareServer interface {
	Send(*FaceCompareReply) error
	grpc.ServerStream
}

type faceRecognitionFaceCompareServer struct {
	grpc.ServerStream
}

func (x *faceRecognitionFaceCompareServer) Send(m *FaceCompareReply) error {
	return x.ServerStream.SendMsg(m)
}

func _FaceRecognition_VideoRecognize_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VideoRecognizeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FaceRecognitionServer).VideoRecognize(m, &faceRecognitionVideoRecognizeServer{stream})
}

type FaceRecognition_VideoRecognizeServer interface {
	Send(*VideoRecognizeReply) error
	grpc.ServerStream
}

type faceRecognitionVideoRecognizeServer struct {
	grpc.ServerStream
}

func (x *faceRecognitionVideoRecognizeServer) Send(m *VideoRecognizeReply) error {
	return x.ServerStream.SendMsg(m)
}

var _FaceRecognition_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ivs.FaceRecognition",
	HandlerType: (*FaceRecognitionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FaceExtract",
			Handler:    _FaceRecognition_FaceExtract_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FaceCompare",
			Handler:       _FaceRecognition_FaceCompare_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "VideoRecognize",
			Handler:       _FaceRecognition_VideoRecognize_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "FaceRecognition.proto",
}

func init() {
	proto.RegisterFile("FaceRecognition.proto", fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb)
}

var fileDescriptor_FaceRecognition_ddb8cedf6dbff8fb = []byte{
	// 929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xf6, 0xae, 0x1d, 0xc7, 0x7b, 0xec, 0x3a, 0xe9, 0x50, 0xa7, 0x8b, 0x85, 0xaa, 0xb0, 0x82,
	0xca, 0x02, 0x29, 0xb2, 0x5d, 0x21, 0xa2, 0xde, 0xa0, 0x3a, 0x04, 0xc5, 0x48, 0x10, 0x34, 0x2d,
	0xdc, 0x4f, 0xd7, 0xd3, 0x78, 0x55, 0xdb, 0xbb, 0xcc, 0xcc, 0x5a, 0x36, 0x4f, 0x50, 0x09, 0x6e,
	0x79, 0x2e, 0x6e, 0x78, 0x01, 0x10, 0x0f, 0x82, 0xe6, 0xcc, 0x78, 0xbd, 0xbb, 0x76, 0x00, 0x25,
	0xdc, 0x9d, 0xff, 0x39, 0x3f, 0xdf, 0x99, 0x19, 0xe8, 0x7c, 0xc5, 0x42, 0x4e, 0x79, 0x18, 0xdf,
	0x2c, 0x22, 0x15, 0xc5, 0x8b, 0xb3, 0x44, 0xc4, 0x2a, 0x26, 0xd5, 0x68, 0x29, 0x83, 0x25, 0x10,
	0xad, 0xbd, 0x5c, 0x29, 0xc1, 0x42, 0x45, 0xf9, 0x8f, 0x29, 0x97, 0x8a, 0x9c, 0x40, 0x5d, 0x31,
	0xf9, 0x76, 0x3c, 0xf1, 0x9d, 0x53, 0xa7, 0xf7, 0x80, 0x5a, 0x8e, 0x3c, 0x01, 0x98, 0xf0, 0x65,
	0x14, 0xf2, 0x2f, 0xb9, 0x0c, 0x7d, 0x17, 0x75, 0x39, 0x09, 0xe9, 0xc1, 0x91, 0x8c, 0x53, 0x11,
	0xf2, 0xf1, 0x9c, 0xdd, 0xf0, 0xef, 0x98, 0x9a, 0xfa, 0xd5, 0x53, 0xa7, 0xe7, 0xd1, 0xb2, 0x38,
	0xf8, 0xd5, 0x81, 0xe3, 0xc2, 0xc1, 0xc9, 0x6c, 0x7d, 0xeb, 0xb1, 0x7d, 0xa8, 0x0b, 0x2e, 0xd3,
	0x99, 0xc2, 0x23, 0x9b, 0xc3, 0x93, 0xb3, 0x68, 0x29, 0xcf, 0x0a, 0xee, 0x5a, 0x7b, 0x55, 0xa1,
	0xd6, 0x8e, 0x7c, 0x0c, 0x75, 0xa9, 0x98, 0x4a, 0x25, 0x9e, 0xdf, 0x1c, 0x36, 0xd1, 0xe3, 0x25,
	0x8a, 0xb4, 0x99, 0x51, 0x8e, 0x8e, 0xa1, 0x6d, 0xa8, 0x6b, 0x61, 0x42, 0x04, 0x7f, 0x39, 0xf0,
	0x70, 0x27, 0x30, 0x21, 0x50, 0x4b, 0xd3, 0xc8, 0xa4, 0xe5, 0x51, 0xa4, 0xc9, 0x23, 0x38, 0x88,
	0x74, 0x39, 0x98, 0x53, 0x8b, 0x1a, 0x86, 0x7c, 0x00, 0x1e, 0x12, 0xaf, 0xd6, 0x09, 0xb7, 0xb5,
	0x6f, 0x05, 0xda, 0x87, 0x47, 0x37, 0x7c, 0xe1, 0xd7, 0x8c, 0x0f, 0x32, 0xe4, 0x73, 0x38, 0x60,
	0x4a, 0x09, 0xe9, 0x1f, 0x9c, 0x56, 0x7b, 0xcd, 0xe1, 0x87, 0xfb, 0xab, 0x3b, 0x7b, 0xa1, 0x6d,
	0x2e, 0x17, 0x4a, 0xac, 0xa9, 0xb1, 0xef, 0x9e, 0x03, 0x6c, 0x85, 0xe4, 0x18, 0xaa, 0x6f, 0xf9,
	0xda, 0xe6, 0xa8, 0x49, 0x7d, 0xdc, 0x92, 0xcd, 0x52, 0x93, 0xa2, 0x47, 0x0d, 0xf3, 0xdc, 0x3d,
	0x77, 0x82, 0xdf, 0x1d, 0x33, 0xf7, 0x8b, 0x78, 0x9e, 0x30, 0xc1, 0xef, 0x3b, 0xf7, 0xf3, 0xcd,
	0xdc, 0x75, 0x4c, 0x99, 0xcd, 0xbd, 0x39, 0x6c, 0x63, 0x2d, 0x21, 0x0b, 0xa7, 0x7c, 0xbc, 0x78,
	0x13, 0xd3, 0xb2, 0x99, 0xf6, 0x54, 0x4c, 0xdc, 0x70, 0xb5, 0xf5, 0xac, 0xed, 0xf7, 0x2c, 0x99,
	0xe9, 0x99, 0xa8, 0x38, 0xf9, 0xd6, 0x3f, 0xc4, 0x6c, 0x90, 0xce, 0x50, 0x95, 0x95, 0x75, 0x37,
	0x54, 0x65, 0xee, 0xff, 0x17, 0xaa, 0xfe, 0xb4, 0xa8, 0x2a, 0x04, 0xd6, 0x89, 0x09, 0x9e, 0xc4,
	0xe3, 0x0d, 0xae, 0x2c, 0x47, 0xba, 0xd0, 0x78, 0xc3, 0x42, 0xfe, 0xbd, 0x46, 0x9c, 0x99, 0x5c,
	0xc6, 0xdf, 0x8e, 0x95, 0x42, 0xe8, 0x5d, 0xac, 0x90, 0xa7, 0x70, 0x38, 0x67, 0x2a, 0x9c, 0x72,
	0xe9, 0xd7, 0xd0, 0xb5, 0x85, 0xae, 0xdf, 0xa0, 0x6c, 0x42, 0x37, 0xca, 0x7b, 0x60, 0xea, 0x9d,
	0x0b, 0x9d, 0x1f, 0xa2, 0x09, 0x8f, 0xed, 0x55, 0xf3, 0xd3, 0xbd, 0x61, 0xd5, 0x87, 0xa6, 0x99,
	0x3a, 0xe5, 0x49, 0xac, 0x9b, 0x5e, 0xdd, 0x03, 0x8c, 0xbc, 0x09, 0xf9, 0x0c, 0x5a, 0x06, 0x61,
	0x17, 0x6c, 0xce, 0x05, 0xb3, 0x58, 0x7a, 0x68, 0xe6, 0x94, 0x53, 0xd0, 0x82, 0x19, 0xf9, 0x04,
	0x8e, 0x25, 0x5b, 0xf2, 0x0b, 0x96, 0xa8, 0x54, 0xf0, 0x89, 0xee, 0xa7, 0x7f, 0x70, 0xea, 0xf4,
	0x1a, 0x74, 0x47, 0x4e, 0x02, 0x68, 0x85, 0x96, 0x47, 0xb8, 0xd6, 0xb1, 0x0f, 0x05, 0x59, 0xd0,
	0x87, 0x56, 0xfe, 0x34, 0xd2, 0x06, 0x37, 0xda, 0x14, 0xef, 0x46, 0x13, 0xdd, 0xd6, 0x54, 0xcc,
	0x6c, 0x0b, 0x35, 0x19, 0xfc, 0xe6, 0xc0, 0x7b, 0xe5, 0xe6, 0xfd, 0x13, 0x78, 0x9f, 0x95, 0xc0,
	0xfb, 0x3e, 0x96, 0x58, 0x8e, 0x70, 0x27, 0xfc, 0x92, 0x4f, 0xa1, 0xf1, 0x3a, 0x5e, 0xe9, 0xe6,
	0x4a, 0xdb, 0xc0, 0x07, 0x68, 0x38, 0xb2, 0xc2, 0xab, 0x0a, 0xcd, 0x0c, 0x46, 0x8f, 0xa1, 0x53,
	0x04, 0xfb, 0xb5, 0x18, 0xc5, 0x2b, 0x2e, 0x83, 0x5f, 0xaa, 0xf0, 0x68, 0x5f, 0x3e, 0x05, 0x78,
	0x3b, 0x25, 0x78, 0x13, 0xa8, 0x25, 0xba, 0xa9, 0xa6, 0x33, 0x48, 0xff, 0xcb, 0x95, 0xfa, 0xbc,
	0xb8, 0x10, 0x1f, 0xdd, 0xda, 0x87, 0x3d, 0x3b, 0xf1, 0x04, 0x3c, 0x15, 0xcd, 0xb9, 0x54, 0x6c,
	0x9e, 0xe0, 0x1c, 0xdd, 0xab, 0x0a, 0xdd, 0x8a, 0x48, 0x00, 0x4d, 0x3b, 0xd6, 0x57, 0xd1, 0x9c,
	0xe3, 0x4d, 0xe3, 0x5d, 0x55, 0x68, 0x5e, 0xf8, 0x5f, 0xf7, 0x6a, 0xfb, 0x5c, 0x34, 0xf2, 0xcf,
	0x45, 0xf6, 0x20, 0x78, 0xb9, 0x07, 0xe1, 0xee, 0x3b, 0x38, 0xf2, 0xe1, 0x24, 0x4b, 0xff, 0x5a,
	0x5c, 0x6c, 0xf3, 0x0c, 0xde, 0x39, 0xd0, 0xd8, 0x0c, 0x90, 0x0c, 0x72, 0x13, 0x76, 0x30, 0xeb,
	0x4e, 0x61, 0xc2, 0x1b, 0x62, 0x3b, 0xe7, 0xee, 0x18, 0x0e, 0xad, 0x50, 0xa3, 0x79, 0xd5, 0xdf,
	0xa0, 0x79, 0xd5, 0xd7, 0xfc, 0xba, 0x6f, 0xd7, 0xd7, 0x5d, 0x23, 0xbf, 0x1a, 0xe0, 0xa4, 0xb4,
	0x7e, 0x80, 0xfa, 0x01, 0x22, 0x49, 0xeb, 0x07, 0xc1, 0x10, 0xea, 0x06, 0x73, 0xba, 0x10, 0x0d,
	0x1e, 0x6e, 0x8b, 0x33, 0x8c, 0x06, 0x41, 0x18, 0x4f, 0xb8, 0x8d, 0x88, 0x74, 0xf0, 0x12, 0x0e,
	0x6d, 0x4b, 0xef, 0x74, 0x6d, 0xea, 0x83, 0xc2, 0x58, 0x18, 0xfc, 0xb8, 0xd4, 0x30, 0xc1, 0xcf,
	0x0e, 0x78, 0xd9, 0x45, 0x92, 0x5b, 0x52, 0x0f, 0x97, 0xb4, 0x07, 0x47, 0xa8, 0xbc, 0xd4, 0x33,
	0x31, 0x4f, 0x93, 0x09, 0x5b, 0x16, 0x93, 0xa7, 0xd0, 0x46, 0x91, 0x3e, 0x4a, 0xe6, 0x7e, 0x3d,
	0x25, 0xa9, 0x46, 0xb2, 0x9a, 0x0a, 0x2e, 0xa7, 0xf1, 0x6c, 0x82, 0xfd, 0x70, 0xe9, 0x56, 0x30,
	0xfc, 0xc3, 0x81, 0xa3, 0xd2, 0x4f, 0x8d, 0x7c, 0x01, 0xcd, 0xdc, 0x47, 0x80, 0x3c, 0xde, 0xfd,
	0x1a, 0xe0, 0x0d, 0xdb, 0xed, 0xec, 0x2a, 0x92, 0xd9, 0x3a, 0xa8, 0x90, 0x17, 0x26, 0x80, 0x7d,
	0x1d, 0x72, 0x01, 0x8a, 0x2f, 0x7f, 0x2e, 0x40, 0xfe, 0xed, 0x0c, 0x2a, 0x7d, 0x87, 0x7c, 0x0d,
	0xed, 0xe2, 0x3e, 0x91, 0xee, 0xde, 0x25, 0x33, 0x81, 0xfc, 0xbd, 0x3a, 0x1b, 0xeb, 0x75, 0x1d,
	0xbf, 0x9e, 0xcf, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x96, 0x7f, 0xf4, 0x93, 0x0a, 0x00,
	0x00,
}
